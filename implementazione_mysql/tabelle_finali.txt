/* Di ciascun attributo è necessario specificarne il tipo [varchar(n) | [tiny]int(m)..], il valore di default [default 0 | user | null...], e i vincoli [not null | unique]*/

DROP TABLE IF EXISTS `Animale`;
CREATE TABLE `Animale`
(
	codice	<++>,
	sesso	<++>,
	specie	<++>,
	famiglia	<++>,
	idMadre	<++>,
	idPadre	<++>,
	dataDiNascita	<++>,
	altezza	<++>,
	peso	<++>,
	razza	<++>,
	posizione	<++>,
	orario	<++>,
	codiceGps	<++>,
	codLocale	<++>,
	primary key (codice),
	foreign key (codiceGps, codLocale) references <++>(<++>)
);

DROP TABLE IF EXISTS `acquistoanimale`;
CREATE TABLE `acquistoanimale`
(
	codiceAnimale	<++>,
	ragioneSocialeFornitore	<++>,
	dataAcquisto	<++>,
	dataArrivo	<++>,
	primary key (codiceAnimale),
	foreign key (codiceAnimale) references <++>(<++>)
);

DROP TABLE IF EXISTS `Fornitore`;
CREATE TABLE `Fornitore`
(
	ragioneSociale	<++>,
	indirizzo	<++>,
	partitaIva	<++>,
	primary key(ragioneSociale)	 
);

DROP TABLE IF EXISTS `Riproduzione`;
CREATE TABLE `Riproduzione`
(
	codiceRiproduzione	<++>,
	complicanza	<++>,
	orario	<++>,
	data	<++>,
	stato	<++>,
	codVeterinario	<++>,
	codiceMadre	<++>,
	codicePadre	<++>,
	primary key (codiceRiproduzione),
	foreign key (codVeterinario, codiceMadre, codicePadre) references <++>(<++>)
);

DROP TABLE IF EXISTS `SchedaGestazione`;
CREATE TABLE `SchedaGestazione`
(
	codiceGestazione	<++>,
	codRiproduzione	<++>,
	codVeterinario	<++>,
	primary key (codiceGestazione),
	foreign key (codRiproduzione, codVeterinario) references <++>(<++>)
);

DROP TABLE IF EXISTS `Agriturismo`;
CREATE TABLE `Agriturismo`
(
	Nome	<++>,
	primary key(Nome)	 
);

DROP TABLE IF EXISTS `Stalla`;
CREATE TABLE `Stalla`
(
	numProgressivo	<++>,
	nomeAgriturismo	<++>,
	primary key (numProgressivo, nomeAgriturismo),
	foreign key (nomeAgriturismo) references <++>(<++>)
);

DROP TABLE IF EXISTS `Locale`;
CREATE TABLE `Locale`
(
	codiceLocale	<++>,
	temperatura	<++>,
	umidità	<++>,
	orientazioneFinestre	<++>,
	tollerabilitaAzoto	<++>,
	tollerabilitaSporcizia	<++>,
	tollerabilitaMetano	<++>,
	nomeAgriturismo	<++>,
	specieOspitata	<++>,
	altezza	<++>,
	lunghezza	<++>,
	larghezza	<++>,
	primary key (codiceLocale),
	foreign key (nomeAgriturismo, specieOspitata, altezza, lunghezza, larghezza) references <++>(<++>)
);

DROP TABLE IF EXISTS `CaratteristichePerTipoLocale`;
CREATE TABLE `CaratteristichePerTipoLocale`
(
	specieOspitata	<++>,
	altezza	<++>,
	lunghezza	<++>,
	larghezza	<++>,
	capienzaMax	<++>,
	pavimentazione	<++>,
	primary key (specieOspitata, altezza, lunghezza, larghezza)	 
);

DROP TABLE IF EXISTS `Visivi`;
CREATE TABLE `Visivi`
(
	codiceVisivo	<++>,
	livelloSporcizia	<++>,
	orarioRilevazione	<++>,
	codLocale	<++>,
	primary key (codiceVisivo),
	foreign key (codLocale) references <++>(<++>)
);

DROP TABLE IF EXISTS `Ambientali`;
CREATE TABLE `Ambientali`
(
	codiceAmbientale	<++>,
	temperatura	<++>,
	umidità	<++>,
	orarioRilevazione	<++>,
	codLocale	<++>,
	primary key (codiceAmbientale),
	foreign key (codLocale) references <++>(<++>)
);

DROP TABLE IF EXISTS `CompostiVolatili`;
CREATE TABLE `CompostiVolatili`
(
	codiceVolatili	<++>,
	concentrazioneMetano	<++>,
	concentrazioneAzoto	<++>,
	codLocale	<++>,
	primary key (codiceVolatili),
	foreign key (codLocale) references <++>(<++>)
);

DROP TABLE IF EXISTS `PuliziaLocale`;
CREATE TABLE `PuliziaLocale`
(
	codLocale	<++>,
	orarioRilevazione	<++>,
	dataRilevazione	<++>,
	stato	<++>,
	personale	<++>,
	primary key (codLocale, orarioRilevazione, dataRilevazione),
	foreign key (codLocale) references <++>(<++>)
);

DROP TABLE IF EXISTS `PastoPerLocale`;
CREATE TABLE `PastoPerLocale`
(
	giorno	<++>,
	orario	<++>,
	codLocale	<++>,
	fibre	<++>,
	proteine	<++>,
	glucidi	<++>,
	concentrazioneSali	<++>,
	concentrazioneVitamine	<++>,
	primary key (giorno, orario,  codLocale),
	foreign key (codLocale, fibre, proteine, glucidi, concentrazioneSali, concentrazioneVitamine) references <++>(<++>)
);

DROP TABLE IF EXISTS `Pasto`;
CREATE TABLE `Pasto`
(
	fibre	<++>,
	proteine	<++>,
	glucidi	<++>,
	concentrazioneSali	<++>,
	concentrazioneVitamine	<++>,
	primary key (fibre, proteine, glucidi, concentrazioneSali, concentrazioneVitamine),
	foreign key (fibre, proteine, glucidi, concentrazioneSali, concentrazioneVitamine) references <++>(<++>)
);

DROP TABLE IF EXISTS `Foraggio`;
CREATE TABLE `Foraggio`
(
	fibre	<++>,
	proteine	<++>,
	glucidi	<++>,
	cereali	<++>,
	frutta	<++>,
	piante	<++>,
	forma	<++>,
	kcalkg	<++>,
	primary key (fibre, proteine, glucidi)	 
);

DROP TABLE IF EXISTS `Acqua`;
CREATE TABLE `Acqua`
(
	concentrazioneSali	<++>,
	concentrazioneVitamine	<++>,
	primary key (concentrazioneSali, concentrazioneVitamine)	 
);

DROP TABLE IF EXISTS `Mangiatoia`;
CREATE TABLE `Mangiatoia`
(
	codice	<++>,
	quantitàRestante	<++>,
	codLocale	<++>,
	primary key (codice),
	foreign key (codLocale) references <++>(<++>)
);

DROP TABLE IF EXISTS `Abberveratoio`;
CREATE TABLE `Abberveratoio`
(
	codice	<++>,
	quantitàRestante	<++>,
	codLocale	<++>,
	primary key (codice),
	foreign key (codLocale) references <++>(<++>)
);

DROP TABLE IF EXISTS `AttivitàPascolo`;
CREATE TABLE `AttivitàPascolo`
(
	codiceAttivita	<++>,
	fasciaOraria	<++>,
	codLocale	<++>,
	codArea	<++>,
	primary key (codiceAttivita),
	foreign key (codLocale, codArea) references <++>(<++>)
);

DROP TABLE IF EXISTS `AreaPascolo`;
CREATE TABLE `AreaPascolo`
(
	codiceArea	<++>,
	primary key(codiceArea)	 
);

DROP TABLE IF EXISTS `RecinzioneDivisoriaeZoneDiPascolo`;
CREATE TABLE `RecinzioneDivisoriaeZoneDiPascolo`
(
	codiceZona	<++>,
	codArea	<++>,
	posizione	<++>,
	primary key (codiceZona, codArea),
	foreign key (codArea) references <++>(<++>)
);

DROP TABLE IF EXISTS `Mungitura`;
CREATE TABLE `Mungitura`
(
	codAnimale	<++>,
	codMungitrice	<++>,
	data	<++>,
	ora	<++>,
	quantità	<++>,
	primary key (codAnimale, codMungitrice, data, ora),
	foreign key (codAnimale, codMungitrice) references <++>(<++>)
);

DROP TABLE IF EXISTS `Mungitrice`;
CREATE TABLE `Mungitrice`
(
	codice	<++>,
	posizione	<++>,
	marca	<++>,
	modello	<++>,
	primary key(codice)	 
);

DROP TABLE IF EXISTS `chemunge`;
CREATE TABLE `chemunge`
(
	codLatte	<++>,
	codMungitrice	<++>,
	primary key (codLatte, codMungitrice),
	foreign key (codLatte, codMungitrice) references <++>(<++>)
);

DROP TABLE IF EXISTS `Latte`;
CREATE TABLE `Latte`
(
	codiceLatte	<++>,
	quantitàSostanzeDisciolte	<++>,
	codAnimale	<++>,
	codSilos	<++>,
	primary key (codiceLatte),
	foreign key (codAnimale, codSilos) references <++>(<++>)
);

DROP TABLE IF EXISTS `Silos`;
CREATE TABLE `Silos`
(
	codice	<++>,
	capacità	<++>,
	livello	<++>,
	primary key(codice)	 
);

DROP TABLE IF EXISTS `prodottocon`;
CREATE TABLE `prodottocon`
(
	codLatte	<++>,
	codLotto	<++>,
	primary key (codLatte, codLotto),
	foreign key (codLatte, codLotto) references <++>(<++>)
);

DROP TABLE IF EXISTS `Lotto`;
CREATE TABLE `Lotto`
(
	codiceLotto	<++>,
	codDipendenti	<++>,
	dataProd	<++>,
	codLab	<++>,
	durata	<++>,
	primary key(codiceLotto)	 
);

DROP TABLE IF EXISTS `stoccaggiocantine`;
CREATE TABLE `stoccaggiocantine`
(
	codLotto	<++>,
	codCantina	<++>,
	primary key (codLotto, codCantina),
	foreign key (codLotto, codCantina) references <++>(<++>)
);

DROP TABLE IF EXISTS `stoccaggiomagazzini`;
CREATE TABLE `stoccaggiomagazzini`
(
	codLotto	<++>,
	codMagazzino	<++>,
	primary key (codLotto, codMagazzino),
	foreign key (codLotto, codMagazzino) references <++>(<++>)
);

DROP TABLE IF EXISTS `Cantine`;
CREATE TABLE `Cantine`
(
	codice	<++>,
	primary key(codice)	 
);

DROP TABLE IF EXISTS `Magazzini`;
CREATE TABLE `Magazzini`
(
	codice	<++>,
	primary key(codice)	 
);

DROP TABLE IF EXISTS `Scaffalature`;
CREATE TABLE `Scaffalature`
(
	codCantina	<++>,
	codice	<++>,
	primary key (codCantina, codice),
	foreign key (codCantina) references <++>(<++>)
);

DROP TABLE IF EXISTS `Parametri`;
CREATE TABLE `Parametri`
(
	data	<++>,
	idSensore	<++>,
	temperatura	<++>,
	umidità	<++>,
	codCantina	<++>,
	primary key (data, idSensore),
	foreign key (codCantina) references <++>(<++>)
);

DROP TABLE IF EXISTS `Scaffali`;
CREATE TABLE `Scaffali`
(
	codice	<++>,
	codMagazzino	<++>,
	primary key (codice, codMagazzino),
	foreign key (codMagazzino) references <++>(<++>)
);

DROP TABLE IF EXISTS `ControlloParametriFase`;
CREATE TABLE `ControlloParametriFase`
(
	parametriEffettivi	<++>,
	codLotto	<++>,
	codFase	<++>,
	primary key (parametriEffettivi, codLotto, codFase),
	foreign key (codLotto, codFase) references <++>(<++>)
);

DROP TABLE IF EXISTS `Fasi`;
CREATE TABLE `Fasi`
(
	codiceFase	<++>,
	nome	<++>,
	parametriProcesso	<++>,
	durata	<++>,
	primary key(codiceFase)	 
);

DROP TABLE IF EXISTS `divisain`;
CREATE TABLE `divisain`
(
	codRicetta	<++>,
	codFase	<++>,
	primary key (codRicetta, codFase),
	foreign key (codRicetta, codFase) references <++>(<++>)
);

DROP TABLE IF EXISTS `Ricetta`;
CREATE TABLE `Ricetta`
(
	codiceRicetta	<++>,
	collocazioneGeografica	<++>,
	ricetta	<++>,
	durataStagionatura	<++>,
	primary key(codiceRicetta)	 
);

DROP TABLE IF EXISTS `Formaggio`;
CREATE TABLE `Formaggio`
(
	nome	<++>,
	nomeAgriturismo	<++>,
	deperibilita	<++>,
	codRicetta	<++>,
	codLatte	<++>,
	primary key (nome, nomeAgriturismo),
	foreign key (nomeAgriturismo) references <++>(<++>)
);

DROP TABLE IF EXISTS `Indicisalute`;
CREATE TABLE `Indicisalute`
(
	codAnimale	<++>,
	dataRilevazione	<++>,
	tipologiaRespirazione	<++>,
	lucentezzaPelo	<++>,
	vigilanza	<++>,
	idratazione	<++>,
	deambulazione	<++>,
	primary key (codAnimale, dataRilevazione),
	foreign key (codAnimale) references <++>(<++>)
);

DROP TABLE IF EXISTS `Visita`;
CREATE TABLE `Visita`
(
	codiceVisita	<++>,
	esito	<++>,
	descrizione	<++>,
	dataEffettiva	<++>,
	dataProgrammata	<++>,
	codAnimale	<++>,
	codVeterinario	<++>,
	primary key (codiceVisita),
	foreign key (codAnimale, codVeterinario) references <++>(<++>)
);

DROP TABLE IF EXISTS `Esame`;
CREATE TABLE `Esame`
(
	codiceEsame	<++>,
	descrizione	<++>,
	data	<++>,
	macchinario	<++>,
	nome	<++>,
	codAnimale	<++>,
	codVeterinario	<++>,
	primary key (codiceEsame),
	foreign key (codAnimale, codVeterinario) references <++>(<++>)
);

DROP TABLE IF EXISTS `Veterinario`;
CREATE TABLE `Veterinario`
(
	codiceFiscale	<++>,
	nome	<++>,
	cognome	<++>,
	contatto	<++>,
	primary key(codiceFiscale)	 
);

DROP TABLE IF EXISTS `Terapia`;
CREATE TABLE `Terapia`
(
	codiceTerapia	<++>,
	dataInizio	<++>,
	durata	<++>,
	secondaTerapiaConsecutiva	<++>,
	codAnimale	<++>,
	primary key (codiceTerapia),
	foreign key (codAnimale) references <++>(<++>)
);

DROP TABLE IF EXISTS `compostada`;
CREATE TABLE `compostada`
(
	codTerapia	<++>,
	nomeFarmaco	<++>,
	posologia	<++>,
	primary key (codTerapia, nomeFarmaco),
	foreign key (codTerapia, nomeFarmaco) references <++>(<++>)
);

DROP TABLE IF EXISTS `Farmaco`;
CREATE TABLE `Farmaco`
(
	nome	<++>,
	principioAttivo	<++>,
	dosaggio	<++>,
	primary key(nome)	 
);

DROP TABLE IF EXISTS `SchedaMedica`;
CREATE TABLE `SchedaMedica`
(
	codiceScheda	<++>,
	massaMagra	<++>,
	carenze	<++>,
	patologie	<++>,
	data	<++>,
	rispostaOculare	<++>,
	emocromo	<++>,
	spessoreZoccolo	<++>,
	fegato	<++>,
	cuore	<++>,
	pancreas	<++>,
	massaMagra	<++>,
	codAnimale	<++>,
	codVeterinario	<++>,
	primary key (codiceScheda),
	foreign key (codAnimale, codVeterinario) references <++>(<++>)
);

DROP TABLE IF EXISTS `DisturbiComportamentali`;
CREATE TABLE `DisturbiComportamentali`(entità	<++>,
	nome	<++>,
	codScheda)  primary key (entità, nome, codScheda),
	foreign key (codScheda) references <++>(<++>)
DROP TABLE IF EXISTS `Lesioni`;
CREATE TABLE `Lesioni`
(
	tipologia	<++>,
	parteDelCorpo	<++>,
	entità	<++>,
	codScheda	<++>,
	primary key (tipologia, parteDelCorpo, entità, codScheda),
	foreign key (codScheda) references <++>(<++>)
);

DROP TABLE IF EXISTS `Cliente`;
CREATE TABLE `Cliente`
(
	codCarta	<++>,
	anticipo	<++>,
	primary key(codCarta)	 
);

DROP TABLE IF EXISTS `Pagamenti`;
CREATE TABLE `Pagamenti`
(
	codPagamento	<++>,
	tipoPagamento	<++>,
	totaleCosto	<++>,
	data	<++>,
	ora	<++>,
	codCliente	<++>,
	primary key (codPagamento),
	foreign key (codCliente) references <++>(<++>)
);

DROP TABLE IF EXISTS `PrenotazioneStanza`;
CREATE TABLE `PrenotazioneStanza`
(
	dataArrivo	<++>,
	nomeAgriturismo	<++>,
	codCliente	<++>,
	numStanza	<++>,
	dataPartenza	<++>,
	primary key (dataArrivo, nomeAgriturismo, codCliente, numStanza),
	foreign key (nomeAgriturismo, codCliente, numStanza) references <++>(<++>)
);

DROP TABLE IF EXISTS `Stanza`;
CREATE TABLE `Stanza`
(
	numStanza	<++>,
	codAgriturismo	<++>,
	costoGiornaliero	<++>,
	suite	<++>,
	numLetti	<++>,
	tipoLetti	<++>,
	primary key (numStanza, codAgriturismo),
	foreign key (codAgriturismo) references <++>(<++>)
);

DROP TABLE IF EXISTS `ServizioperStanza`;
CREATE TABLE `ServizioperStanza`
(
	dataInizioUtilizzo	<++>,
	dataArrivo	<++>,
	codCliente	<++>,
	numStanza	<++>,
	nomeAgriturismo	<++>,
	codServizio	<++>,
	dataFineUtilizzo	<++>,
	primary key (dataInizioUtilizzo, dataArrivo, codCliente, numStanza, nomeAgriturismo, codServizio),
	foreign key (dataArrivo, codCliente, numStanza, nomeAgriturismo, codServizio) references <++>(<++>)
);

DROP TABLE IF EXISTS `ServizioAggiuntivo`;
CREATE TABLE `ServizioAggiuntivo`
(
	tipoServizio	<++>,
	costo	<++>,
	primary key(tipoServizio)	 
);

DROP TABLE IF EXISTS `PrenotazioneEscursione`;
CREATE TABLE `PrenotazioneEscursione`
(
	dataPrenotazione	<++>,
	codEscursione	<++>,
	codCliente	<++>,
	primary key (dataPrenotazione, codEscursione, codCliente),
	foreign key (codEscursione, codCliente) references <++>(<++>)
);

DROP TABLE IF EXISTS `Escursione`;
CREATE TABLE `Escursione`
(
	codice	<++>,
	giorno	<++>,
	orario	<++>,
	codGuida	<++>,
	primary key (codice),
	foreign key (codGuida) references <++>(<++>)
);

DROP TABLE IF EXISTS `Guida`;
CREATE TABLE `Guida`
(
	codfisc	<++>,
	nome	<++>,
	cognome	<++>,
	contatto	<++>,
	primary key(codfisc)	 
);

DROP TABLE IF EXISTS `legataa`;
CREATE TABLE `legataa`
(
	codEscursione	<++>,
	codItinerario	<++>,
	primary key (codEscursione, codItinerario),
	foreign key (codEscursione, codItinerario) references <++>(<++>)
);

DROP TABLE IF EXISTS `Itinerario`;
CREATE TABLE `Itinerario`
(
	codice	<++>,
	numSentieri	<++>,
	codAgriturismo	<++>,
	primary key (codice),
	foreign key (codAgriturismo) references <++>(<++>)
);

DROP TABLE IF EXISTS `compostoda`;
CREATE TABLE `compostoda`( codItinerario	<++>,
	nomeTappa)     primary key (codItinerario, nomeTappa),
	foreign key (codItinerario, nomeTappa) references <++>(<++>)
DROP TABLE IF EXISTS `Tappe`;
CREATE TABLE `Tappe`
(
	nome	<++>,
	tempoPermanenza	<++>,
	primary key(nome) 	 
);

DROP TABLE IF EXISTS `Account`;
CREATE TABLE `Account`
(
	utente	<++>,
	password	<++>,
	domandaRec	<++>,
	rispostaRec	<++>,
	numTelefono	<++>,
	codFiscale	<++>,
	scadenzaDoc	<++>,
	numDoc	<++>,
	dataIscrizione	<++>,
	codDoc	<++>,
	cognome	<++>,
	nome	<++>,
	enteRilascio	<++>,
	tipoDoc	<++>,
	indirizzo	<++>,
	codiceCarta	<++>,
	primary key (utente, password),
	foreign key (codiceCarta) references <++>(<++>)
);

DROP TABLE IF EXISTS `Recensione`;
CREATE TABLE `Recensione`
(
	codiceRecensione	<++>,
	gradimentoGenerale	<++>,
	qualitaPercepita	<++>,
	conservazione	<++>,
	campoTestuale	<++>,
	gusto	<++>,
	utente	<++>,
	password	<++>,
	codProdotto	<++>,
	primary key (codiceRecensione),
	foreign key (utente, password, codProdotto) references <++>(<++>)
);

DROP TABLE IF EXISTS `FormaggioProdotto`;
CREATE TABLE `FormaggioProdotto`
(
	codiceProdotto	<++>,
	prezzo	<++>,
	peso	<++>,
	stockAppartenenza	<++>,
	rimastiInStock	<++>,
	scadenza	<++>,
	nome	<++>,
	nomeAgriturismo	<++>,
	primary key (codiceProdotto),
	foreign key (nome, nomeAgriturismo) references <++>(<++>)
);

DROP TABLE IF EXISTS `contenutoordine`;
CREATE TABLE `contenutoordine`
(
	codOrdine	<++>,
	codFormaggioprodotto	<++>,
	quantità	<++>,
	reso	<++>,
	primary key (codOrdine, codFormaggioprodotto),
	foreign key (codOrdine, codFormaggioprodotto) references <++>(<++>)
);

DROP TABLE IF EXISTS `OrdineProdotti`;
CREATE TABLE `OrdineProdotti`
(
	codiceOrdine	<++>,
	stato	<++>,
	data	<++>,
	tipoConsegnaReso	<++>,
	utente	<++>,
	password	<++>,
	codSpedizione	<++>,
	primary key (codiceOrdine),
	foreign key (utente, password, codSpedizione) references <++>(<++>)
);

DROP TABLE IF EXISTS `Spedizione`;
CREATE TABLE `Spedizione`
(
	codice	<++>,
	dataConsegnaEffettiva	<++>,
	dataConsegnaPrevista	<++>,
	percorso	<++>,
	stato	<++>,
	primary key(codice)	 
);

DROP TABLE IF EXISTS `processatada`;
CREATE TABLE `processatada`
(
	codSpedizione	<++>,
	codcentro	<++>,
	primary key (codSpedizione, codcentro),
	foreign key (codSpedizione, codcentro) references <++>(<++>)
);

DROP TABLE IF EXISTS `CentridiSmistamento`;
CREATE TABLE `CentridiSmistamento`
(
	codice	<++>,
	nome	<++>,
	indirizzo	<++>,
	contatto	<++>,
	primary key(codice)	 
);
